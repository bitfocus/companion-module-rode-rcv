name: Validate & Build Plugin

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write   # needed for creating releases

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build the project
        run: tsc

      - name: Extract version from manifest
        id: get_version
        run: echo "version=$(jq -r '.version' package.json)" >> "$GITHUB_OUTPUT"

      - name: Pack Companion plugin
        run: |
          version=${{ steps.get_version.outputs.version }}
          yarn companion-module-build
          mkdir temp_pkg
          mv ./pkg/* temp_pkg/
          rm -rf pkg/
          (cd temp_pkg && zip -r "../companion-module-rode-rcv_${version}.zip" .)
          rm -rf temp_pkg

      - name: Create GitHub release & upload asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: RCV Companion ${{ steps.get_version.outputs.version }}
          body_path: commits.txt
          files: companion-module-rode-rcv_${{ steps.get_version.outputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate commit messages since previous tag (optional)
        if: always()
        run: |
          prev=$(git describe --tags --abbrev=0 HEAD^ || echo "")
          if [ -n "$prev" ]; then git log "$prev"..HEAD --pretty=format:"- %s" > commits.txt; else echo "- Initial release" > commits.txt; fi
